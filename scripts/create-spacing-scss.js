const writeFile = require('./lib/writeFile');

const spacingSizes = {
  '0': '0',
  '1px': '1px',
  '2px': '2px',
  '025': '0.125rem',
  '0375': '0.1875rem',
  '05': '0.25rem',
  '075': '0.375rem',
  '1': '0.5rem',
  '1025': '0.625rem',
  '105': '0.75rem',
  '1075': '0.875rem',
  '2': '1rem',
  '3': '1.5rem',
  '4': '2rem',
  '5': '2.5rem',
  '6': '3rem',
  '7': '3.5rem',
  '8': '4rem',
  '9': '4.5rem',
  '10': '5rem',
  '12': '6rem',
  '15': '7.5rem',
  '20': '10rem'
};

const spacingProperties = [
  'border',
  'border-bottom',
  'border-left',
  'border-right',
  'border-top',
  'height',
  'min-height',
  'max-height',
  'outline',
  'margin',
  'margin-bottom',
  'margin-left',
  'margin-right',
  'margin-top',
  'padding',
  'padding-bottom',
  'padding-left',
  'padding-right',
  'padding-top',
  'width',
  'min-width',
  'max-width'
];

const lines = [
  '// This file is generated by `npm run create-spacing-scss',
  '',
  ':root {'
];

lines.push('  // Positive Spacing Values');
for (const size in spacingSizes) {
  const value = spacingSizes[size];
  lines.push(`  --jhu-spacing-${size}: ${value};`);
}

lines.push('', '  // Negative Spacing Values');
for (const size in spacingSizes) {
  const value = spacingSizes[size];
  lines.push(`  --jhu-spacing-neg-${size}: -${value};`)
}

lines.push(
  '}', 
  '', 
  '// CSS Utility Classes'
);

// loop throught spacingProperties and compile spacing-sizes
spacingProperties.map(property => {

  // This is a loop
  Object.keys(spacingSizes).map(size => {
    lines.push(
      ``,
      `.jhu-${property}-${size} {`,
      `  ${property}: var(--jhu-spacing-${size});`,
      `}`
    )
  });

  if (property === 'margin' || property === 'padding') {

    Object.keys(spacingSizes).map(size => {

      lines.push(
        ``,
        `.jhu-${property}-x-${size} {`,
        `  ${property}-left: var(--jhu-spacing-${size});`,
        `  ${property}-right: var(--jhu-spacing-${size});`,
        `}`,
        ``,
        `.jhu-${property}-y-${size} {`,
        `  ${property}-bottom: var(--jhu-spacing-${size});`,
        `  ${property}-top: var(--jhu-spacing-${size});`,
        `}`
      )

      if (property === 'margin') {
        lines.push(
          ``,
          `.jhu-${property}-x-neg-${size} {`,
          `  margin-left: var(--jhu-spacing-neg-${size});`,
          `  margin-right: var(--jhu-spacing-neg-${size});`,
          `}`,
          ``,
          `.jhu-${property}-y-neg-${size} {`,
          `  margin-bottom: var(--jhu-spacing-neg-${size});`,
          `  margin-top: var(--jhu-spacing-neg-${size});`,
          `}`
        )
      }
    });

    if (property === 'margin') {

      lines.push(
        ``,
        `.jhu-${property}-x-auto {`,
        `  margin-left: auto;`,
        `  margin-right: auto;`,
        `}`,
        ``,
        `.jhu-${property}-y-auto {`,
        `  margin-bottom: auto;`,
        `  margin-top: auto;`,
        `}`
      )
    }
  }

  if (property.includes('margin-')) {

    // This is a loop
    Object.keys(spacingSizes).map(size => {

      lines.push(
        ``,
        `.jhu-${property}-neg-${size} {`,
        `  ${property}: var(--jhu-spacing-neg-${size});`,
        `}`
      )
    });

    lines.push(
      ``,
      `.jhu-${property}-auto {`,
      `  ${property}: auto;`,
      `}`
    )
  }
});


// write
writeFile('./src/shared/scss/variables/spacing.scss', lines);
